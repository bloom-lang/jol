module Identifier(Spacing, Symbol, Reserved);

import Spacing;
import Symbol;
import Reserved;

String Name = yyValue:Word &{ ! contains(OVERLOG_KEYWORDS, toText(yyValue)) } ;

String Word = WordCharacters Spacing ;

transient String WordCharacters =
  start:_ &{ Character.isJavaIdentifierStart(start) }
    ( part:_ &{ Character.isJavaIdentifierPart(part) } )*
  ;

String EventModifier = void:'#' EventType;

String EventType =
     <Insert> "insert":Word
   / <Delete> "delete":Word
   ;

generic TableName = 
       Name void:"::":Symbol name:Name &{ name.length() > 0 && Character.isLowerCase(name.charAt(0)) }
    /  name:Name &{ name.length() > 0 && Character.isLowerCase(name.charAt(0)) }
    ;

generic Variable = 
       name:Name &{ name.length() > 0 && Character.isUpperCase(name.charAt(0)) }
    /  "_":Symbol
    /  "*":Symbol
    ;
				  

generic Location = void:'@' Variable;

generic AttributePosition = void:'$' [0-9]+ Spacing;

generic Type =
  <Type> TypeName Dimensions? Spacing
  ;

Node TypeName =
    <Basic> PrimitiveType
  / <Class> ClassType
  ;

generic PrimitiveType =
    <Byte>    "byte":Word
  / <Short>   "short":Word
  / <Char>    "char":Word
  / <String>  "string":Word
  / <Int>     "int":Word
  / <Long>    "long":Word
  / <Float>   "float":Word
  / <Double>  "double":Word
  / <Boolean> "boolean":Word
  ;

generic Dimensions =
  ( void:'[' [0-9]* void:']' )+
  ;
  
generic ClassType =
  Name (void:'.' Name) *
  ;
